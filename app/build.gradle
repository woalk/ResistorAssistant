/*
 * Resistor Assistant - Resistance Calculator
 * Copyright (C) 2018 Alexander KÃ¶ster (Woalk Software)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.woalk.apps.resistorassistant"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName getGitVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "DATE", '"' + getDate() + '"'
        buildConfigField "String", "GIT_BRANCH", '"' + getGitBranch() + '"'
        buildConfigField "String", "GIT_COMMIT", '"' + getGitCommit() + '"'
        buildConfigField "String", "HOST", '"' + getBuildHost() + '"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

//region build environment getters
def getGitVersionName() {
    def DIRTY_SEQ = "*DIRTY"
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--long', "--dirty=$DIRTY_SEQ", '--broken'
            standardOutput = stdout // e.g. v1.31-17-gba6b21b*DIRTY
        }
        def desc = stdout.toString().trim().tokenize('-')
        println(desc)
        String vNum = desc.get(0) // e.g. v1.31
        String vAhead
        String vGit
        vAhead = desc.get(desc.size() - 2) // e.g. 17
        vGit = desc.get(desc.size() - 1) // e.g. gba6b21b*DIRTY
        String dirty = vGit.endsWith(DIRTY_SEQ) ? "*" : ""
        // an * in the version name means the working dir was not clean on build

        if (vNum.startsWith("v") && vNum.charAt(1).isDigit()) {
            vNum = vNum.substring(1)
        }
        String ver
        if (vAhead != "0") {
            ver = "$vNum+$vAhead$dirty" // e.g. v1.31+17*
        } else {
            ver = "$vNum$dirty"
        }
        return ver
    }
    catch (ignored) {
        return "BROKEN GIT"
    }
}

static def getDate() {
    new Date().format("yyyy-MM-dd-HH-mmZ")
}

def getGitBranch() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'symbolic-ref', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitCommit() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getBuildHost() {
    def stdout = new ByteArrayOutputStream()
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        exec {
            commandLine 'cmd', '/c', 'hostname'
            standardOutput = stdout
        }
        return stdout.toString().trim() + " Windows"
    } else {
        exec {
            commandLine 'sh', '-c', 'echo "$(whoami)@$(hostname) $(uname)"'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
}
//endregion

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:support-v4:27.1.1'
}
